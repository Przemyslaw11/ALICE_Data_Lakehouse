[tool.ruff]
# Enable specific rules
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "S",    # flake8-bandit (security)
    "PL",   # pylint
    "RUF",  # Ruff-specific rules
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "PIE",  # flake8-pie
    "PT",   # flake8-pytest-style
    "SLF",  # flake8-self
    "TRY",  # tryceratops
    "PERF", # Perflint
    "N",    # pep8-naming
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "T20",  # flake8-print
    "PGH",  # pygrep-hooks
    "FBT",  # boolean-trap
]

exclude = [
    ".git",
    ".ruff_cache",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "migrations",
    ".env",
    ".venv",
]

line-length = 88
target-version = "py39"
src = ["src"]

[tool.ruff.lint]
per-file-ignores = { "__init__.py" = ["F401"], "test_*.py" = ["S101", "PLR2004"], "conftest.py" = ["S101", "PLR2004"], "tests/*" = ["S105", "S106", "S107"] }

# Security-focused rules
extend-select = [
    "S101",  # Assert used
    "S102",  # exec used
    "S103",  # Unsafe yaml load
    "S104",  # Possible binding to all interfaces
    "S105",  # Possible hardcoded password
    "S106",  # Possible hardcoded password in function call
    "S107",  # Possible hardcoded password in argument defaults
    "S108",  # Probable insecure usage of temp file/directory
    "S110",  # try_except_pass detected
    "S112",  # Try, Except, Pass detected
    "S301",  # Pickle and modules that could be unsafe
    "S302",  # Warning about using mark_safe
    "S303",  # Warning about using eval
    "S304",  # Warning about using xml
    "S305",  # Warning about using xml
    "S306",  # Warning about using xml
    "S307",  # Warning about using eval
    "S308"   # Warning about using mark_safe
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.isort]
known-first-party = ["cern_datalake"]
known-third-party = ["pytest", "requests"]